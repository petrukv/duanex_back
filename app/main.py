from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from app.analysis.sentiment_analysis import analyze_sentiment
from app.gemini.gemini_response import generate_gemini_response
from app.schemas.message_schema import MessageRequest

app = FastAPI()
interaction_count = 0  # –∑–º—ñ–Ω–Ω–∞ –¥–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É –≤–∑–∞—î–º–æ–¥—ñ–π –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º

origins = [
    "http://localhost",
    "https://localhost",
    'http://127.0.0.1:5500',
    "http://localhost:5500",
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)


# –ë–∞–∑–æ–≤–∞ –æ–±—Ä–æ–±–∫–∞ –¥–ª—è –ø—Ä–∏–≤—ñ—Ç–∞–Ω—å —Ç–∞ –ø—Ä–æ—â–∞–Ω—å
def basic_conversation(message: str) -> str:
    greetings = ["hello", "hi", "hey"]
    farewells = ["bye", "goodbye", "see you"]

    lower_message = message.lower()
    if any(greet in lower_message for greet in greetings):
        return "Hi! How can I assist you today?"
    elif any(farewell in lower_message for farewell in farewells):
        return "Goodbye! Have a great day!"
    return None

# –û—Å–Ω–æ–≤–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@app.post("/response")
def generate_response(request: MessageRequest):
    global interaction_count
    try:
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ—Å—Ç—ñ –∑–∞–ø–∏—Ç–∏
        basic_reply = basic_conversation(request.message)
        if basic_reply:
            return {"response": basic_reply}
        
        # –ê–Ω–∞–ª—ñ–∑ –Ω–∞—Å—Ç—Ä–æ—é –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        sentiment = analyze_sentiment(request.message)

        # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        response_text = generate_gemini_response(request.message)

        # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –Ω–∞—Å—Ç—Ä–æ—é
        if sentiment == "positive":
            response_text = "I'm glad to hear that! üòä (positive) " + response_text
        elif sentiment == "negative":
            response_text = "I'm sorry you're facing issues. üòî (negative) " + response_text
        elif sentiment == "neutral":
            response_text = response_text + "Alright! How can I assist you further? (neutral) "

        # –ó–±—ñ–ª—å—à–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ –≤–∑–∞—î–º–æ–¥—ñ–π
        interaction_count += 1

        # –ó–∞–ø–∏—Ç –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤‚Äô—è–∑–∫—É –ø—ñ—Å–ª—è –∫–æ–∂–Ω–∏—Ö —Ç—Ä—å–æ—Ö –≤–∑–∞—î–º–æ–¥—ñ–π
        if interaction_count % 3 == 0:
            response_text += " By the way, could you provide some feedback on our conversation?"

        return {"response": response_text, "sentiment": sentiment}

    except ValueError as e:
        raise HTTPException(status_code=500, detail="I'm not sure I understand that. Could you please rephrase?")

